# To start all services, simply run:
#     docker-compose up -d
# Ensure you have a valid requirements.txt at the project root (run `pip freeze > requirements.txt`).
# If you encounter build errors, prefix with:
#     COMPOSE_DOCKER_CLI_BUILD=0 docker-compose up -d

services:
  postgres:
    image: postgres:13
    container_name: polymarket-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - backend_pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

  ollama:
    image: ollama/ollama:latest
    container_name: ollama-serve
    restart: always
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 3
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "ollama serve &
      sleep 10 &&
      (ollama list | grep llama3.2 || ollama pull llama3.2:latest) &&
      wait"

  twitter-webhook:
    image: polyai-app
    container_name: twitter-webhook
    restart: always
    env_file: .env
    volumes:
      - ./:/app
      - huggingface_cache:/root/.cache/huggingface
      - pip_cache:/root/.cache/pip
    ports:
      - "8000:8000"
    environment:
      - HF_HOME=/root/.cache/huggingface
      - PIP_CACHE_DIR=/root/.cache/pip
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    command: uvicorn twitterWebhook:app --host 0.0.0.0 --port 8000 --reload

  driver:
    image: polyai-app
    container_name: driver-service
    restart: always
    env_file: .env
    volumes:
      - ./:/app
      - huggingface_cache:/root/.cache/huggingface
      - pip_cache:/root/.cache/pip
    environment:
      - HF_HOME=/root/.cache/huggingface
      - PIP_CACHE_DIR=/root/.cache/pip
      - WEBHOOK_URL=http://twitter-webhook:8000
    depends_on:
      twitter-webhook:
        condition: service_started
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    command: |-
      bash -c "\
      sleep 10 && \
      python driver.py
      "

volumes:
  backend_pgdata:
  ollama_data:
  huggingface_cache:
  pip_cache:
